shortdata$EVTYPE[j] = elem
}
}
shortdata$EVTYPE <- gsub("(^[[:space:]]+|[[:space:]]+$)","",shortdata$EVTYPE)
#Remove anything that is in parenthesis
shortdata$EVTYPE <- gsub(" *\\(.*?\\)* ", "", shortdata$EVTYPE)
#http://stackoverflow.com/questions/13529360/replace-text-within-parenthesis-in-r
print(length(unique(shortdata$EVTYPE)))
head(shortdata$EVTYPE,150)
tail(shortdata$EVTYPE,150)
weathercat = c("LIGHTNING", "FREEZE", "FLOOD", "TSUNAMI", "TORNADO", "BLIZZARD",
"DROUGHT", "HAIL", "HEAT", "SLEET", "WILDFIRE", "COLD", "HIGH WIND",
"STRONG WIND", "FOG", "STORM", "RAIN", "SNOW", "HURRICANE", "THUNDERSTORM",
"SEICHE", "ICE", "DUST")
for(elem in weathercat) {
temp <- which(grepl(elem, shortdata$EVTYPE, ignore.case=TRUE))
for (j in temp) {
shortdata$EVTYPE[j] = elem
}
}
unique(shortdata$EVTYPE)
weathercat = c("LIGHTNING", "FREEZE", "FLOOD", "TSUNAMI", "TORNADO", "BLIZZARD",
"DROUGHT", "HAIL", "HEAT", "SLEET", "WILDFIRE", "COLD", "WIND",
"FOG", "STORM", "RAIN", "SNOW", "HURRICANE", "THUNDERSTORM",
"SEICHE", "ICE", "DUST", "SMOKE")
for(elem in weathercat) {
temp <- which(grepl(elem, shortdata$EVTYPE, ignore.case=TRUE))
for (j in temp) {
shortdata$EVTYPE[j] = elem
}
}
shortdata$EVTYPE <- gsub("(^[[:space:]]+|[[:space:]]+$)","",shortdata$EVTYPE)
#Remove anything that is in parenthesis
shortdata$EVTYPE <- gsub(" *\\(.*?\\)* ", "", shortdata$EVTYPE)
#http://stackoverflow.com/questions/13529360/replace-text-within-parenthesis-in-r
#Everything that isn't one of the categories above, will be classified as OTHER
print(length(unique(shortdata$EVTYPE)))
shortdata$EVTYPE
unique(shortdata$EVTYPE)
shortdata <- rawdata[rawdata$FATALITIES != 0 |
rawdata$INJURIES !=0|
rawdata$PROPDMG !=0|
rawdata$CROPDMG !=0,]
shortdata$EVTYPE <- gsub("WINDS", "WIND", shortdata$EVTYPE, ignore.case=TRUE)
shortdata$EVTYPE <- gsub("RAINS", "RAIN", shortdata$EVTYPE, ignore.case=TRUE)
shortdata$EVTYPE <- gsub("THUNDERSTORMS", "THUNDERSTORM", shortdata$EVTYPE, ignore.case=TRUE)
shortdata$EVTYPE <- gsub("FLOODING", "FLOOD", shortdata$EVTYPE, ignore.case=TRUE)
shortdata$EVTYPE <- gsub("ADVISORY", "", shortdata$EVTYPE, ignore.case=TRUE)
shortdata$EVTYPE <- gsub("TSTM", "", shortdata$EVTYPE, ignore.case=TRUE)
shortdata$EVTYPE <- gsub("FREEZING", "FREEZE", shortdata$EVTYPE, ignore.case=TRUE)
shortdata$EVTYPE <- gsub("ICY", "ICE", shortdata$EVTYPE, ignore.case=TRUE)
shortdata$EVTYPE <- gsub("WILDFIRE", "FIRE", shortdata$EVTYPE, ignore.case=TRUE)
#Simplify Categories
weathercat = c("LIGHTNING", "FREEZE", "FLOOD", "TSUNAMI", "TORNADO", "BLIZZARD",
"DROUGHT", "HAIL", "HEAT", "SLEET", "FIRE", "COLD", "WIND",
"FOG", "STORM", "RAIN", "SNOW", "HURRICANE", "THUNDERSTORM",
"SEICHE", "ICE", "DUST", "SMOKE", "SURF", "AVALANCHE", "RIP CURRENTS",
"MUDSLIDE", "HIGH TIDE", "LOW TIDE", "VOLCANIC ASH", "FUNNEL CLOUD", "")
for(elem in weathercat) {
temp <- which(grepl(elem, shortdata$EVTYPE, ignore.case=TRUE))
for (j in temp) {
shortdata$EVTYPE[j] = elem
}
}
shortdata <- rawdata[rawdata$FATALITIES != 0 |
rawdata$INJURIES !=0|
rawdata$PROPDMG !=0|
rawdata$CROPDMG !=0,]
#Clean Up the Names in EVTYPE
shortdata$EVTYPE <- gsub("WINDS", "WIND", shortdata$EVTYPE, ignore.case=TRUE)
shortdata$EVTYPE <- gsub("RAINS", "RAIN", shortdata$EVTYPE, ignore.case=TRUE)
shortdata$EVTYPE <- gsub("THUNDERSTORMS", "THUNDERSTORM", shortdata$EVTYPE, ignore.case=TRUE)
shortdata$EVTYPE <- gsub("FLOODING", "FLOOD", shortdata$EVTYPE, ignore.case=TRUE)
shortdata$EVTYPE <- gsub("ADVISORY", "", shortdata$EVTYPE, ignore.case=TRUE)
shortdata$EVTYPE <- gsub("TSTM", "", shortdata$EVTYPE, ignore.case=TRUE)
shortdata$EVTYPE <- gsub("FREEZING", "FREEZE", shortdata$EVTYPE, ignore.case=TRUE)
shortdata$EVTYPE <- gsub("ICY", "ICE", shortdata$EVTYPE, ignore.case=TRUE)
shortdata$EVTYPE <- gsub("WILDFIRE", "FIRE", shortdata$EVTYPE, ignore.case=TRUE)
#Simplify Categories
weathercat = c("LIGHTNING", "FREEZE", "FLOOD", "TSUNAMI", "TORNADO", "BLIZZARD",
"DROUGHT", "HAIL", "HEAT", "SLEET", "FIRE", "COLD", "WIND",
"FOG", "STORM", "RAIN", "SNOW", "HURRICANE", "THUNDERSTORM",
"SEICHE", "ICE", "DUST", "SMOKE", "SURF", "AVALANCHE", "RIP CURRENTS",
"MUDSLIDE", "HIGH TIDE", "LOW TIDE", "VOLCANIC ASH", "FUNNEL CLOUD")
for(elem in weathercat) {
temp <- which(grepl(elem, shortdata$EVTYPE, ignore.case=TRUE))
for (j in temp) {
shortdata$EVTYPE[j] = elem
}
}
shortdata$EVTYPE <- gsub("(^[[:space:]]+|[[:space:]]+$)","",shortdata$EVTYPE)
#Remove anything that is in parenthesis
shortdata$EVTYPE <- gsub(" *\\(.*?\\)* ", "", shortdata$EVTYPE)
#http://stackoverflow.com/questions/13529360/replace-text-within-parenthesis-in-r
#Everything that isn't one of the categories above, will be classified as OTHER
print(length(unique(shortdata$EVTYPE)))
which(grepl("pupsik", shortdata$EVTYPE))
(grepl("pupsik", shortdata$EVTYPE))
(grepl("pupsik", shortdata$EVTYPE))=FALSE
(grepl("pupsik", shortdata$EVTYPE))==FALSE
class(weathercat)
for (i in 1:nrow(shortdata)){
if(grepl(shortdata$EVTYPE[i], weathercat) == FALSE){
shortdata$EVTYPE[i] = "OTHER"
}
}
print(length(unique(shortdata$EVTYPE)))
warnings()
shortdata$EVTYPE1
shortdata$EVTYPE[1]
shortdata$EVTYPE[6]
rm(list=ls())
library(ggplot2)
library(data.table)
rawdata <- read.csv(bzfile("repdata-data-StormData.csv.bz2"))
shortdata <- rawdata[rawdata$FATALITIES != 0 |
rawdata$INJURIES !=0|
rawdata$PROPDMG !=0|
rawdata$CROPDMG !=0,]
nrows <- nrow(shortdata)
shortdata$EVTYPE <- gsub("WINDS", "WIND", shortdata$EVTYPE, ignore.case=TRUE)
shortdata$EVTYPE <- gsub("RAINS", "RAIN", shortdata$EVTYPE, ignore.case=TRUE)
shortdata$EVTYPE <- gsub("THUNDERSTORMS", "THUNDERSTORM", shortdata$EVTYPE, ignore.case=TRUE)
shortdata$EVTYPE <- gsub("FLOODING", "FLOOD", shortdata$EVTYPE, ignore.case=TRUE)
shortdata$EVTYPE <- gsub("ADVISORY", "", shortdata$EVTYPE, ignore.case=TRUE)
shortdata$EVTYPE <- gsub("TSTM", "", shortdata$EVTYPE, ignore.case=TRUE)
shortdata$EVTYPE <- gsub("FREEZING", "FREEZE", shortdata$EVTYPE, ignore.case=TRUE)
shortdata$EVTYPE <- gsub("ICY", "ICE", shortdata$EVTYPE, ignore.case=TRUE)
shortdata$EVTYPE <- gsub("WILDFIRE", "FIRE", shortdata$EVTYPE, ignore.case=TRUE)
weathercat = c("LIGHTNING", "FREEZE", "FLOOD", "TSUNAMI", "TORNADO", "BLIZZARD",
"DROUGHT", "HAIL", "HEAT", "SLEET", "FIRE", "COLD", "WIND",
"FOG", "STORM", "RAIN", "SNOW", "HURRICANE", "THUNDERSTORM",
"SEICHE", "ICE", "DUST", "SMOKE", "SURF", "AVALANCHE", "RIP CURRENTS",
"MUDSLIDE", "HIGH TIDE", "LOW TIDE", "VOLCANIC ASH", "FUNNEL CLOUD")
for(elem in weathercat) {
temp <- which(grepl(elem, shortdata$EVTYPE, ignore.case=TRUE))
for (j in temp) {
shortdata$EVTYPE[j] = elem
}
}
shortdata$EVTYPE <- gsub("(^[[:space:]]+|[[:space:]]+$)","",shortdata$EVTYPE)
#Remove anything that is in parenthesis
shortdata$EVTYPE <- gsub(" *\\(.*?\\)* ", "", shortdata$EVTYPE)
print(length(unique(shortdata$EVTYPE)))
grep("FOG", weathercat)
grep("pup", weathercat)
for (i in 1:nrow(shortdata)){
if(grep(shortdata$EVTYPE[i], weathercat) == 0){
shortdata$EVTYPE[i] = "OTHER"
}
}
print(length(unique(shortdata$EVTYPE)))
shortdata$EVTYPE[1]
if(grep(shortdata$EVTYPE[1], weathercat)==0){print(shortdata$EVTYPE)}
if(grep(shortdata$EVTYPE[1], weathercat)!=0){print(shortdata$EVTYPE)}
if(grep(shortdata$EVTYPE[1], weathercat)!=0){print(shortdata$EVTYPE[1])}
for (i in 1:nrow(shortdata)){
if(grep(shortdata$EVTYPE[i], weathercat) == 0){
shortdata$EVTYPE[i] = "OTHER"
}
}
print(length(unique(shortdata$EVTYPE)))
i=1
if(grep(shortdata$EVTYPE[1], weathercat)!=0){print(shortdata$EVTYPE[1])}
if(grep(shortdata$EVTYPE[i], weathercat)!=0){print(shortdata$EVTYPE[1])}
nrow(shortdata)
for (i in 1:nrow(shortdata)){
if(grep(shortdata$EVTYPE[i], weathercat) = 0){
shortdata$EVTYPE[i] = "OTHER"
}
}
print(length(unique(shortdata$EVTYPE)))
#Everything that isn't one of the categories above, will be classified as OTHER
for (i in 1:nrow(shortdata)){
if(grep(shortdata$EVTYPE[i], weathercat) == 0){
shortdata$EVTYPE[i] <- "OTHER"
}
}
print(length(unique(shortdata$EVTYPE)))
n <- grep(shortdata$EVTYPE[5, weathercat])
n <- grep(shortdata$EVTYPE[5], weathercat)
n
n <- grep(shortdata$EVTYPE[1500], weathercat)
n
n <- grep(shortdata$EVTYPE[15000], weathercat)
n
n <- grep(shortdata$EVTYPE[150000], weathercat)
n
n <- grep(shortdata$EVTYPE[350000], weathercat)
n <- grep(shortdata$EVTYPE[250000], weathercat)
n
n <- grep("boob", weathercat)
n
n==0
n=1
n==1
n==2
n <- grepl("boob", weathercat)
n
n <- which(grepl("boob", weathercat))
n
n <- grep("boob", weathercat)
n
class(n)
n <- length(grep("boob", weathercat))
n
n <- length(grep("TORNADO", weathercat))
n
print(length(unique(shortdata$EVTYPE)))
#Everything that isn't one of the categories above, will be classified as OTHER
for (i in 1:nrow(shortdata)){
if(length(grep(shortdata$EVTYPE[i], weathercat)) == 0){
shortdata$EVTYPE[i] <- "OTHER"
}
}
print(length(unique(shortdata$EVTYPE)))
unique(shortdata$EVTYPE)
#Everything that isn't one of the categories above, will be classified as OTHER
for (i in 1:nrow(shortdata)){
if(length(which(grepl(shortdata$EVTYPE[i], weathercat))) == 0){
shortdata$EVTYPE[i] <- "OTHER"
}
}
print(length(unique(shortdata$EVTYPE)))
?grepl
?grep
#Everything that isn't one of the categories above, will be classified as OTHER
for (i in 1:nrow(shortdata)){
if(length(grepl(shortdata$EVTYPE[i], weathercat, fixed = TRUE)) == 0){
shortdata$EVTYPE[i] <- "OTHER"
}
}
print(length(unique(shortdata$EVTYPE)))
string <- c("HIGH", "HIGH TIDE", "HIGHTIDE")
grep("HIGH", string)
grep("HIGH", string, value=TRUE)
grep("HIGH", string, value=TRUE, fixed=TRUE)
is.element("HIGH", string)
is.element("HIGHT", string)
#Everything that isn't one of the categories above, will be classified as OTHER
for (i in 1:nrow(shortdata)){
if(is.element(shortdata$EVTYPE[i], weathercat) == FALSE){
shortdata$EVTYPE[i] <- "OTHER"
}
}
print(length(unique(shortdata$EVTYPE)))
weathercat
as.data.frame(weathercat)
summary(shortdata)
summary(shortdata#EVTYPE)
summary(shortdata$EVTYPE)
str(shortdata$EVTYPE)
obsnum(shortdata$EVTYPE)
nrow(shortdata[shortdataEVTYPE == "OTHER",])
nrow(shortdata[shortdata$EVTYPE == "OTHER",])
shortdata <- rawdata[rawdata$FATALITIES != 0 |
rawdata$INJURIES !=0|
rawdata$PROPDMG !=0|
rawdata$CROPDMG !=0,]
shortdata$EVTYPE <- gsub("WINDS", "WIND", shortdata$EVTYPE, ignore.case=TRUE)
shortdata$EVTYPE <- gsub("RAINS", "RAIN", shortdata$EVTYPE, ignore.case=TRUE)
shortdata$EVTYPE <- gsub("THUNDERSTORMS", "THUNDERSTORM", shortdata$EVTYPE, ignore.case=TRUE)
shortdata$EVTYPE <- gsub("FLOODING", "FLOOD", shortdata$EVTYPE, ignore.case=TRUE)
shortdata$EVTYPE <- gsub("ADVISORY", "", shortdata$EVTYPE, ignore.case=TRUE)
shortdata$EVTYPE <- gsub("TSTM", "", shortdata$EVTYPE, ignore.case=TRUE)
shortdata$EVTYPE <- gsub("FREEZING", "FREEZE", shortdata$EVTYPE, ignore.case=TRUE)
shortdata$EVTYPE <- gsub("ICY", "ICE", shortdata$EVTYPE, ignore.case=TRUE)
shortdata$EVTYPE <- gsub("WILDFIRE", "FIRE", shortdata$EVTYPE, ignore.case=TRUE)
#Simplify Categories
weathercat = c("LIGHTNING", "FREEZE", "FLOOD", "TSUNAMI", "TORNADO", "BLIZZARD",
"DROUGHT", "HAIL", "HEAT", "SLEET", "FIRE", "COLD", "WIND",
"FOG", "STORM", "RAIN", "SNOW", "HURRICANE", "THUNDERSTORM",
"SEICHE", "ICE", "DUST", "SMOKE", "SURF", "AVALANCHE", "RIP CURRENTS",
"MUDSLIDE", "TIDE", "VOLCANIC ASH", "FUNNEL CLOUD")
for(elem in weathercat) {
temp <- which(grepl(elem, shortdata$EVTYPE, ignore.case=TRUE))
for (j in temp) {
shortdata$EVTYPE[j] = elem
}
}
shortdata$EVTYPE <- gsub("(^[[:space:]]+|[[:space:]]+$)","",shortdata$EVTYPE)
#Remove anything that is in parenthesis
shortdata$EVTYPE <- gsub(" *\\(.*?\\)* ", "", shortdata$EVTYPE)
#http://stackoverflow.com/questions/13529360/replace-text-within-parenthesis-in-r
#Everything that isn't one of the categories above, will be classified as OTHER
for (i in 1:nrow(shortdata)){
if(is.element(shortdata$EVTYPE[i], weathercat) == FALSE){
shortdata$EVTYPE[i] <- "OTHER"
}
}
uniquevals <- length(unique(shortdata$EVTYPE))
othercount <- nrow(shortdata[shortdata$EVTYPE == "OTHER",])
allobs <- nrow(shortdata)
healthdata <- rawdata[rawdata$FATALITIES != 0 |
rawdata$INJURIES !=0,]
econdata <- rawdata[rawdata$PROPDMG !=0|
rawdata$CROPDMG !=0,]
?mutate
healthdata <- mutate(healthdata, ALLINC = FATALITIES + INJURIES)
healthdata <- select(healthdata, EVTYPE, YEAR, ALLINC)
shortdata$BGN_DATE <- as.Date(shortdata$BGN_DATE, format = "%m/%d/%Y")
shortdata$YEAR <- year(shortdata$BGN_DATE)
healthdata <- rawdata[rawdata$FATALITIES != 0 |
rawdata$INJURIES !=0,]
healthdata <- mutate(healthdata, ALLINC = FATALITIES + INJURIES)
healthdata <- select(healthdata, EVTYPE, YEAR, ALLINC)
rm(healthdata)
healthdata <- rawdata[shortdata$FATALITIES != 0 |
shortdata$INJURIES !=0,]
healthdata <- mutate(healthdata, ALLINC = FATALITIES + INJURIES)
healthdata <- select(healthdata, EVTYPE, YEAR, ALLINC)
healthdata <- shortdata[shortdata$FATALITIES != 0 |
shortdata$INJURIES !=0,]
healthdata <- mutate(healthdata, ALLINC = FATALITIES + INJURIES)
healthdata <- select(healthdata, EVTYPE, YEAR, ALLINC)
healthdata <- aggregate(ALLINC ~ YEAR*EVTYPE, healthdata)
healthdata <- aggregate(ALLINC ~ YEAR*EVTYPE, healthdata, sum)
ggplot(healthdata, aes(x=YEAR, y=ALLINC))+
geom_line()
View(healthdata)
healthdata <- shortdata[shortdata$FATALITIES != 0 |
shortdata$INJURIES !=0,]
healthdata <- mutate(healthdata, ALLINC = FATALITIES + INJURIES)
healthdata <- select(healthdata, EVTYPE, YEAR, ALLINC)
healthdata <- aggregate(healthdata, by= c("YEAR", "EVTYPE"),sum)
healthdata <- aggregate(healthdata, by= as.list("YEAR", "EVTYPE"),sum)
healthdata <- aggregate(ALLINC*YEAR ~ EVTYPE, healthdata,sum)
View(healthdata)
healthgraph <- ggplot(healthdata, aes(x=ALLINC, y=EVTYPE))+
geom_bar()
ggplot(healthdata, aes(x=ALLINC, y=EVTYPE))+
geom_bar()
ggplot(healthdata, aes(x=ALLINC*YEAR, y=EVTYPE))+
geom_bar()
names(healthdata)
ggplot(healthdata, aes(x=ALLINC * YEAR, y=EVTYPE))+
geom_bar()
healthdata <- shortdata[shortdata$FATALITIES != 0 |
shortdata$INJURIES !=0,]
healthdata <- mutate(healthdata, ALLINC = FATALITIES + INJURIES)
healthdata <- select(healthdata, EVTYPE, YEAR, ALLINC)
healthdata <- aggregate(healthdata,by = list(c("YEAR", "EVTYPE")), sum)
healthdata <- aggregate(healthdata, by = as.list(c("YEAR", "EVTYPE")), sum)
healthdata <- aggregate(healthdata, by = as.list(c("YEAR", "EVTYPE")), "sum")
healthdata <- aggregate(healthdata, by = c("YEAR", "EVTYPE"), sum)
healthdata <- aggregate(ALLINC*YEAR ~ EVTYPE, healthdata,sum)
names(healthdata) <- c("EVTYPE", "ALLINC")
ggplot(healthdata, aes(x=ALLINC, y=EVTYPE))+
geom_bar()
ggplot(healthdata, aes(x=EVTYPE, y=ALLINC))+
geom_bar(stat="identity")
ggplot(healthdata, aes(x=EVTYPE, y=ALLINC))+
geom_bar(stat="identity")+
theme(axis.text.x=element_text(angle=-90))
ggplot(healthdata, aes(x=EVTYPE, y=ALLINC))+
geom_bar(stat="identity")+
theme(axis.text.x=element_text(angle=90))
ggplot(healthdata, aes(x=EVTYPE, y=ALLINC))+
geom_bar(stat="identity", fill = "blue")+
theme(axis.text.x=element_text(angle=90))+
labs(title = "Injury/Fatality by Event Type", x= "Event Type", y = "Injuries/Fatalities")
ggplot(healthdata, aes(x=EVTYPE, y=ALLINC))+
geom_bar(stat="identity", fill = "blue")+
theme(axis.text.x=element_text(angle=90))+
scale_y_log10()+
labs(title = "Number of Injuries/Fatalities by Event Type", x= "Event Type", y = "Injuries/Fatalities")
ggplot(healthdata, aes(x=EVTYPE, y=ALLINC))+
geom_bar(stat="identity", fill = "blue")+
theme(axis.text.x=element_text(angle=90))+
#   scale_y_log10()+
labs(title = "Number of Injuries/Fatalities by Event Type", x= "Event Type", y = "Injuries/Fatalities")
ggplot(healthdata, aes(x=EVTYPE, y=ALLINC))+
geom_bar(stat="identity", fill = "blue")+
theme(axis.text.x=element_text(angle=90))+
scale_y_log10()+
labs(title = "Number of Injuries/Fatalities by Event Type", x= "Event Type", y = "Injuries/Fatalities")
ggplot(healthdata, aes(x=EVTYPE, y=ALLINC))+
geom_bar(stat="identity", fill = "blue")+
theme(axis.text.x=element_text(angle=90))+
labs(title = "Number of Injuries/Fatalities by Event Type", x= "Event Type", y = "Injuries/Fatalities")
econdata <- shortdata[shortdata$PROPDMG !=0|
shortdata$CROPDMG !=0,]
econdata <- mutate(econdata, ALLDMG = CROPDMG+PROPDMG)
econdata <- select(econdata, EVTYPE, YEAR, ALLDMG)
econdata <- aggregate(YEAR*ALLDMG~EVTYPE, sum)
econdata <- aggregate(YEAR*ALLDMG~EVTYPE, econdata,sum)
names(econgraph) <- c("EVTYPE", "ALLDMG")
names(econdata) <- c("EVTYPE", "ALLDMG")
ggplot(econdata, aes(x="EVTYPE", y="ALLDMG"))+
geom_bar(stat="identity", fill = "blue")+
theme(axis.text.x=element_text(angle=90))+
#labs(title = "Number of Injuries/Fatalities by Event Type", x= "Event Type", y = "Injuries/Fatalities")+
theme_bw()
View(econdata)
View(econdata)
ggplot(econdata, aes(x=EVTYPE, y=ALLDMG))+
geom_bar(stat="identity", fill = "blue")+
theme(axis.text.x=element_text(angle=90))+
#labs(title = "Number of Injuries/Fatalities by Event Type", x= "Event Type", y = "Injuries/Fatalities")+
theme_bw()
ggplot(econdata, aes(x=EVTYPE, y=ALLDMG))+
geom_bar(stat="identity", fill = "blue")+
theme(axis.text.x=element_text(angle=90))+
#labs(title = "Number of Injuries/Fatalities by Event Type", x= "Event Type", y = "Injuries/Fatalities")+
theme_bw()
ggplot(econdata, aes(x=EVTYPE, y=ALLDMG))+
geom_bar(stat="identity", fill = "blue")+
theme(axis.text.x=element_text(angle=90))+
theme_bw()
ggplot(healthdata, aes(x=EVTYPE, y=ALLINC))+
geom_bar(stat="identity", fill = "blue")+
theme(axis.text.x=element_text(angle=90))+
labs(title = "Number of Injuries/Fatalities by Event Type", x= "Event Type", y = "Injuries/Fatalities")+
theme_bw()
ggplot(healthdata, aes(x=EVTYPE, y=ALLINC))+
geom_bar(stat="identity", fill = "blue")+
theme(axis.text.x=element_text(angle=90))+
labs(title = "Number of Injuries/Fatalities by Event Type", x= "Event Type", y = "Injuries/Fatalities")+
theme_bw()
print(healthgraph)
ggplot(healthdata, aes(x=EVTYPE, y=ALLINC))+
geom_bar(stat="identity", fill = "blue")+
theme(axis.text.x=element_text(angle=90))+
labs(title = "Number of Injuries/Fatalities by Event Type", x= "Event Type", y = "Injuries/Fatalities")+
theme_bw()
ggplot(healthdata, aes(x=EVTYPE, y=ALLINC))+
geom_bar(stat="identity", fill = "blue")+
theme(axis.text.x=element_text(angle=-90))+
labs(title = "Number of Injuries/Fatalities by Event Type", x= "Event Type", y = "Injuries/Fatalities")+
theme_bw()
ggplot(healthdata, aes(x=EVTYPE, y=ALLINC))+
geom_bar(stat="identity", fill = "blue")
healthgraph+    theme(axis.text.x=element_text(angle=90))
View(healthdata)
healthdata <- shortdata[shortdata$FATALITIES != 0 |
shortdata$INJURIES !=0,]
healthdata <- mutate(healthdata, ALLINC = FATALITIES + INJURIES)
healthdata <- select(healthdata, EVTYPE, YEAR, ALLINC)
healthdata <- aggregate(ALLINC*YEAR ~ EVTYPE, healthdata,sum)
names(healthdata) <- c("EVTYPE", "ALLINC")
ggplot(healthdata, aes(x=EVTYPE, y=ALLINC))+
geom_bar(stat="identity", fill = "blue")+
theme(axis.text.x=element_text(angle=90))+
labs(title = "Number of Injuries/Fatalities by Event Type", x= "Event Type", y = "Injuries/Fatalities")+
theme_bw()
ggplot(healthdata, aes(x=EVTYPE, y=ALLINC))+
geom_bar(stat="identity", fill = "blue")+
theme(axis.text.x=element_text(angle=90))+
labs(title = "Number of Injuries/Fatalities by Event Type", x= "Event Type", y = "Injuries/Fatalities")+
theme_bw()
healthgraph <- ggplot(healthdata, aes(x=EVTYPE, y=ALLINC))+
geom_bar(stat="identity", fill = "blue")+
theme(axis.text.x=element_text(angle=90))+
labs(title = "Number of Injuries/Fatalities by Event Type", x= "Event Type", y = "Injuries/Fatalities")+
theme_bw()
print(healthgraph)
ggplot(healthdata, aes(x=EVTYPE, y=ALLINC))+
geom_bar(stat="identity", fill = "blue")+
theme(axis.text.x=element_text(angle=90))+
labs(title = "Number of Injuries/Fatalities by Event Type", x= "Event Type", y = "Injuries/Fatalities")+
theme_bw()
ggplot(healthdata, aes(x=EVTYPE, y=ALLINC))+
geom_bar(stat="identity", fill = "blue")+
theme(axis.text.x=element_text(angle=90))
ggplot(healthdata, aes(x=EVTYPE, y=ALLINC))+
geom_bar(stat="identity", fill = "blue")+
theme(axis.text.x=element_text(angle=90))+
labs(title = "Number of Injuries/Fatalities by Event Type", x= "Event Type", y = "Injuries/Fatalities")
ggplot(healthdata, aes(x=EVTYPE, y=ALLINC))+
geom_bar(stat="identity", fill = "blue")+
theme(axis.text.x=element_text(angle=90))+
labs(title = "Number of Injuries/Fatalities by Event Type", x= "Event Type", y = "Injuries/Fatalities")+
theme_bw()
ggplot(healthdata, aes(x=EVTYPE, y=ALLINC))+
geom_bar(stat="identity", fill = "blue")+
labs(title = "Number of Injuries/Fatalities by Event Type", x= "Event Type", y = "Injuries/Fatalities")+
theme_bw()+
theme(axis.text.x=element_text(angle=90))
ggplot(econdata, aes(x=EVTYPE, y=ALLDMG))+
geom_bar(stat="identity", fill = "blue")+
theme_bw()+
theme(axis.text.x=element_text(angle=90))
allweathercat <- c(weathercat, "OTHER")
bar(stat="identity", fill = "blue")+
labs(title = "Property and Crop Damage by Event Type",
x= "Event Type", y = "Property and Crop Loss Amount")
theme_bw()+
theme(axis.text.x=element_text(angle=90))
ggplot(econdata, aes(x=EVTYPE, y=ALLDMG))+
geom_bar(stat="identity", fill = "blue")+
labs(title = "Property and Crop Damage by Event Type",
x= "Event Type", y = "Property and Crop Loss Amount")
theme_bw()+
theme(axis.text.x=element_text(angle=90))
ggplot(econdata, aes(x=EVTYPE, y=ALLDMG))+
geom_bar(stat="identity", fill = "blue")+
labs(title = "Property and Crop Damage by Event Type",
x= "Event Type", y = "Property and Crop Loss Amount")+
theme_bw()+
theme(axis.text.x=element_text(angle=90))
uniquevals <- length(unique(shortdata$EVTYPE))
uniquevals
unique(shortdata$EVTYPE)
rm(list=ls())
?year
?sprintf
sprintf("%f", othershare)
othershare <- 1.0005348
sprintf("%f", othershare)
sprintf("0.3%f", othershare)
sprintf("%0.3f", othershare)
install.packages("pdflatex")
